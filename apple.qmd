---
server: shiny
filters: [surveydown]
---

```{r}
#| context: setup
#| echo: false
#| warning: false
#| message: false

# To install the R package, run this in your R console:
# remotes::install_github("jhelvy/surveydown", force = TRUE)

# To install the Quarto extension, run this in your R console:
# surveydown::sd_update_extension()

# Load the surveydown package
library(surveydown)
# devtools::load_all("../surveydown")

# Load other packages
library(tidyverse)
library(glue)

# Run initial setup function (essential - do not delete)
sd_setup()
```

::: {#welcome .sd-page}
# Welcome to our survey!

```{r}
sd_question(
  type  = 'mc',
  id    = 'penguins',
  label = "Which type of penguin do you like the best?",
  option = c(
    'Ad√©lie'    = 'adelie',
    'Chinstrap' = 'chinstrap',
    'Gentoo'    = 'gentoo'
  )
)
```

```{r}
sd_reactive_output('cbc1')
```

<br>

```{r}
sd_next(next_page = 'cbc2')
```
:::

::: {#cbc2 .sd-page}
```{r}
sd_reactive_output('cbc2')
```
 
<br>

```{r}
sd_next(next_page = 'end')
```
:::

::: {#end .sd-page}
This it the last page in the survey
:::

```{r}
#| context: server

##########################
# Data frame preparation #
##########################
survey <- read_csv("choice_questions.csv")
respondentID <- sample(survey$respID, 1)
sd_store_value(respondentID, "respID")

df <- survey %>%
    filter(respID == respondentID) %>%
    mutate(image = paste0("images/", image))

make_cbc_options <- function(df) {
  alt1 <- df %>% filter(altID == 1)
  alt2 <- df %>% filter(altID == 2)
  alt3 <- df %>% filter(altID == 3)
  
  options <- c("option_1", "option_2", "option_3")
  
  names(options) <- c(
    glue("
      **Option 1**<br>
      <img src='{alt1$image}' width=100><br>
      **Type**: {alt1$type}<br>
      **Price**: $ {alt1$price} / lb
    "),
    glue("
      **Option 2**<br>
      <img src='{alt2$image}' width=100><br>
      **Type**: {alt2$type}<br>
      **Price**: $ {alt2$price} / lb
    "),
    glue("
      **Option 3**<br>
      <img src='{alt3$image}' width=100><br>
      **Type**: {alt3$type}<br>
      **Price**: $ {alt3$price} / lb
    ")
  )
  return(options)
}

cbc1_options <- make_cbc_options(df %>% filter(qID == 1)) 
cbc2_options <- make_cbc_options(df %>% filter(qID == 2))

# CBC Question 1
sd_question_reactive(
  type   = 'mc_buttons',
  id     = 'cbc1',
  label  = "(1 of 6) If these were your only options, which would you choose?",
  option = cbc1_options
)

# CBC Question 2
sd_question_reactive(
  type   = 'mc_buttons',
  id     = 'cbc2',
  label  = "(2 of 6) If these were your only options, which would you choose?",
  option = cbc2_options
)

# Rest of the server setup

db <- sd_database()

config <- sd_config(
  # required_questions = c('penguins','cbc1', 'cbc2')
  all_questions_required = TRUE
)

sd_server(
  input   = input,
  output  = output,
  session = session,
  config  = config,
  db      = db
)
```
