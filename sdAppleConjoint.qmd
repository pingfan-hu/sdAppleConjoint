---
server: shiny
filters: [surveydown]
---

```{r}
#| context: setup
#| echo: false
#| warning: false
#| message: false

# Run this in your Terminal to install the Quarto extension:
# quarto install extension jhelvy/surveydown-ext

# Run this in your Console to install the R package:
# remotes::install_github("jhelvy/surveydown", force = TRUE)

# Load the package locally
devtools::load_all("../surveydown")

# Load the package from library:
# library(surveydown)

# Load other necessary packages:
library(tidyverse)
library(glue)

# This is essential to the survey:
sd_setup()
```

::: {#welcome .sd-page}
# Welcome to our survey!

Thank you for participating in this survey, which is part of a research effort by The George Washington University. For this survey, we will ask you about your preferences for different types of apples.

```{r}
sd_next(next_page = 'consent')
```
:::

::: {#consent .sd-page}
# Consent

This survey is being conducted by students at The George Washing University. We will not be collecting any identifying data, such as your name or address. The whole survey will take approximately 10 to 15 minutes to complete. Your participation is voluntary and you may stop the survey at any time.

If you would like to participate, please answer the following questions:

```{r}
sd_question(
  type  = 'mc',
  id    = 'consent_age',
  label = "I am age 18 or older",
  option = c(
    'Yes' = 'yes',
    'No'  = 'no'
  ),
  required = TRUE
)

sd_question(
  type  = 'mc',
  id    = 'consent_understand',
  label = "I have read and understand the above information",
  option = c(
    'Yes' = 'yes',
    'No'  = 'no'
  ),
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'favorite_fruit')
```
:::

::: {#favorite_fruit .sd-page}
# Favorite Fruit

```{r}
sd_question(
  type  = 'mc',
  id    = 'like_fruit',
  label = "Do you like fruit?",
  option = c(
    'Yes!'    = 'yes',
    'Kind of' = 'kind_of',
    'No :('   = 'no'
  ),
  required = TRUE
)

sd_question(
  type  = 'text',
  id    = 'fav_fruit',
  label = "What is your favorite fruit?",
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'screening')
```
:::

::: {#screening .sd-page}
# Screening Questions

For this example, I'm using the response here to screen out respondents - I'm only interested in people who choose **"Red"**, so if you choose "Blue" you'll be screened out.

Usually you would not tell respondents ahead of time how they will be screened - I'm just putting an explanation here since this whole survey is for demonstration purposes

```{r}
sd_question(
  type  = 'mc',
  id    = 'screenout',
  label = "Before we go on, please select which color you prefer between these two:",
  option = c(
    'Blue' = 'blue',
    'Red'  = 'red'
  ),
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'educational')
```
:::

::: {#educational .sd-page}
# Educational Page

Great work! 

Now that you've shared a bit about yourself, we'd like you to consider a shopping scenario in which you can choose some apples to purchase from a set of apples with different attributes.

Letâ€™s learn about these attributes.

## Price

Price refers to the full price you will pay (including taxes) for the apples

## Freshness

The freshness of the apple will be presented as one of three different categories:

- **Excellent**: No bruising or marks. 
- **Average**: One or two light bruises. 
- **Poor**: Multiple bruises and marks.

## Type

We will show five different types of apples:

Fuji | Gala | Honeycrisp | Pink Lady | Red Delicious
-----|------|------------|-----------|--------------
<img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/fuji.jpg" width=100> | <img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/gala.jpg" width=100> | <img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/honeycrisp.jpg" width=100> | <img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/pinkLady.jpg" width=100> | <img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/redDelicious.jpg" width=100>

```{r}
sd_next(next_page = 'cbc_practice')
```
:::

::: {#cbc_practice .sd-page}
# Choice-based Conjoint (cbc) Practice

We'll now begin the choice tasks. On the next few pages we will show you three options of apples and we'll ask you to choose the one you most prefer.

```{r}
# Define the option vector
apple_buttons_option <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(apple_buttons_option)[1] <- "**Option 1**<br>
    <img src='https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/fuji.jpg' width=100><br>
    **Type**: Fuji<br>
    **Price**: $ 2 / lb<br>
    **Freshness**: Average"
names(apple_buttons_option)[2] <- "**Option 2**<br>
    <img src='https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/pinkLady.jpg' width=100><br>
    **Type**: Pink Lady<br>
    **Price**: $ 1.5 / lb<br>
    **Freshness**: Excellent"
names(apple_buttons_option)[3] <- "**Option 3**<br>
    <img src='https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/honeycrisp.jpg' width=100><br>
    **Type**: Honeycrisp<br>
    **Price**: $ 2 / lb<br>
    **Freshness**: Poor"

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_practice',
  label  = "For example, if these were the only apples available, which would you choose?",
  option = apple_buttons_option,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_intro')
```
:::

::: {#cbc_intro .sd-page}
# Conjoint Question Intro

Great work!

We will now show you 6 sets of choice questions starting on the next page.

```{r include=FALSE}
# Here we prepare the data frames for choice questions, respondent ID, etc.
survey <- read_csv("https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/choice_questions.csv")
respondentID <- sample(survey$respID, 1)
df <- survey %>% 
    filter(respID == respondentID) %>% 
    mutate(image = paste0(
"https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/", image))
```

```{r}
sd_next(next_page = 'cbc_q1')
```
:::

::: {#cbc_q1 .sd-page}
# Conjoint Question 1

```{r}
# Define q1 choice options
q1_alts <- df %>% filter(qID == 1)
q1_alt1 <- q1_alts %>% filter(altID == 1)
q1_alt2 <- q1_alts %>% filter(altID == 2)
q1_alt3 <- q1_alts %>% filter(altID == 3)

# Define the option vector
q1_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q1_options)[1] <- glue("**Option 1**<br>
    <img src='{q1_alt1$image}' width=100><br>
    **Type**: {q1_alt1$type}<br>
    **Price**: {q1_alt1$price}<br>
    **Freshness**: {q1_alt1$freshness}")
names(q1_options)[2] <- glue("**Option 2**<br>
    <img src='{q1_alt2$image}' width=100><br>
    **Type**: {q1_alt2$type}<br>
    **Price**: {q1_alt2$price}<br>
    **Freshness**: {q1_alt2$freshness}")
names(q1_options)[3] <- glue("**Option 3**<br>
    <img src='{q1_alt3$image}' width=100><br>
    **Type**: {q1_alt3$type}<br>
    **Price**: {q1_alt3$price}<br>
    **Freshness**: {q1_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q1',
  label  = "(1 of 6) If these were your only options, which would you choose?",
  option = q1_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_q2')
```
:::

::: {#cbc_q2 .sd-page}
# Conjoint Question 2

```{r}
# Define q1 choice options
q2_alts <- df %>% filter(qID == 2)
q2_alt1 <- q2_alts %>% filter(altID == 1)
q2_alt2 <- q2_alts %>% filter(altID == 2)
q2_alt3 <- q2_alts %>% filter(altID == 3)

# Define the option vector
q2_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q2_options)[1] <- glue("**Option 1**<br>
    <img src='{q2_alt1$image}' width=100><br>
    **Type**: {q2_alt1$type}<br>
    **Price**: {q2_alt1$price}<br>
    **Freshness**: {q2_alt1$freshness}")
names(q2_options)[2] <- glue("**Option 2**<br>
    <img src='{q2_alt2$image}' width=100><br>
    **Type**: {q2_alt2$type}<br>
    **Price**: {q2_alt2$price}<br>
    **Freshness**: {q2_alt2$freshness}")
names(q2_options)[3] <- glue("**Option 3**<br>
    <img src='{q2_alt3$image}' width=100><br>
    **Type**: {q2_alt3$type}<br>
    **Price**: {q2_alt3$price}<br>
    **Freshness**: {q2_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q2',
  label  = "(2 of 6) If these were your only options, which would you choose?",
  option = q2_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_q3')
```
:::

::: {#cbc_q3 .sd-page}
# Conjoint Question 3

```{r}
# Define q1 choice options
q3_alts <- df %>% filter(qID == 3)
q3_alt1 <- q3_alts %>% filter(altID == 1)
q3_alt2 <- q3_alts %>% filter(altID == 2)
q3_alt3 <- q3_alts %>% filter(altID == 3)

# Define the option vector
q3_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q3_options)[1] <- glue("**Option 1**<br>
    <img src='{q3_alt1$image}' width=100><br>
    **Type**: {q3_alt1$type}<br>
    **Price**: {q3_alt1$price}<br>
    **Freshness**: {q3_alt1$freshness}")
names(q3_options)[2] <- glue("**Option 2**<br>
    <img src='{q3_alt2$image}' width=100><br>
    **Type**: {q3_alt2$type}<br>
    **Price**: {q3_alt2$price}<br>
    **Freshness**: {q3_alt2$freshness}")
names(q3_options)[3] <- glue("**Option 3**<br>
    <img src='{q3_alt3$image}' width=100><br>
    **Type**: {q3_alt3$type}<br>
    **Price**: {q3_alt3$price}<br>
    **Freshness**: {q3_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q3',
  label  = "(3 of 6) If these were your only options, which would you choose?",
  option = q3_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_q4')
```
:::

::: {#cbc_q4 .sd-page}
# Conjoint Question 4

```{r}
# Define q1 choice options
q4_alts <- df %>% filter(qID == 4)
q4_alt1 <- q4_alts %>% filter(altID == 1)
q4_alt2 <- q4_alts %>% filter(altID == 2)
q4_alt3 <- q4_alts %>% filter(altID == 3)

# Define the option vector
q4_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q4_options)[1] <- glue("**Option 1**<br>
    <img src='{q4_alt1$image}' width=100><br>
    **Type**: {q4_alt1$type}<br>
    **Price**: {q4_alt1$price}<br>
    **Freshness**: {q4_alt1$freshness}")
names(q4_options)[2] <- glue("**Option 2**<br>
    <img src='{q4_alt2$image}' width=100><br>
    **Type**: {q4_alt2$type}<br>
    **Price**: {q4_alt2$price}<br>
    **Freshness**: {q4_alt2$freshness}")
names(q4_options)[3] <- glue("**Option 3**<br>
    <img src='{q4_alt3$image}' width=100><br>
    **Type**: {q4_alt3$type}<br>
    **Price**: {q4_alt3$price}<br>
    **Freshness**: {q4_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q4',
  label  = "(4 of 6) If these were your only options, which would you choose?",
  option = q4_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_q5')
```
:::

::: {#cbc_q5 .sd-page}
# Conjoint Question 5

```{r}
# Define q1 choice options
q5_alts <- df %>% filter(qID == 5)
q5_alt1 <- q5_alts %>% filter(altID == 1)
q5_alt2 <- q5_alts %>% filter(altID == 2)
q5_alt3 <- q5_alts %>% filter(altID == 3)

# Define the option vector
q5_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q5_options)[1] <- glue("**Option 1**<br>
    <img src='{q5_alt1$image}' width=100><br>
    **Type**: {q5_alt1$type}<br>
    **Price**: {q5_alt1$price}<br>
    **Freshness**: {q5_alt1$freshness}")
names(q5_options)[2] <- glue("**Option 2**<br>
    <img src='{q5_alt2$image}' width=100><br>
    **Type**: {q5_alt2$type}<br>
    **Price**: {q5_alt2$price}<br>
    **Freshness**: {q5_alt2$freshness}")
names(q5_options)[3] <- glue("**Option 3**<br>
    <img src='{q5_alt3$image}' width=100><br>
    **Type**: {q5_alt3$type}<br>
    **Price**: {q5_alt3$price}<br>
    **Freshness**: {q5_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q5',
  label  = "(5 of 6) If these were your only options, which would you choose?",
  option = q5_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'cbc_q6')
```
:::

::: {#cbc_q6 .sd-page}
# Conjoint Question 6

```{r}
# Define q1 choice options
q6_alts <- df %>% filter(qID == 6)
q6_alt1 <- q6_alts %>% filter(altID == 1)
q6_alt2 <- q6_alts %>% filter(altID == 2)
q6_alt3 <- q6_alts %>% filter(altID == 3)

# Define the option vector
q6_options <- c("option_1", "option_2", "option_3")

# Change the names of each element to display markdown-formatted text and an embedded image using html
names(q6_options)[1] <- glue("**Option 1**<br>
    <img src='{q6_alt1$image}' width=100><br>
    **Type**: {q6_alt1$type}<br>
    **Price**: {q6_alt1$price}<br>
    **Freshness**: {q6_alt1$freshness}")
names(q6_options)[2] <- glue("**Option 2**<br>
    <img src='{q6_alt2$image}' width=100><br>
    **Type**: {q6_alt2$type}<br>
    **Price**: {q6_alt2$price}<br>
    **Freshness**: {q6_alt2$freshness}")
names(q6_options)[3] <- glue("**Option 3**<br>
    <img src='{q6_alt3$image}' width=100><br>
    **Type**: {q6_alt3$type}<br>
    **Price**: {q6_alt3$price}<br>
    **Freshness**: {q6_alt3$freshness}")

sd_question(
  type   = 'mc_buttons',
  id     = 'cbc_q6',
  label  = "(6 of 6) If these were your only options, which would you choose?",
  option = q6_options,
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'apple_knowledge')
```
:::

::: {#apple_knowledge .sd-page}
## Apple Knowledge

Thank you for your feedback! The next section will ask some basic questions about apples. 

Please answer to the best of your knowledge.

```{r}
sd_question(
  type  = 'mc',
  id    = 'apple_knowledge_1',
  label = 'Please select the type of this apple:

<img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/fuji.jpg" width=100>',
  option = c(
    'Fuji'          = 'fuji',
    'Gala'          = 'gala',
    'Honeycrisp'    = 'honeycrisp',
    'Pink Lady'     = 'pink_lady',
    'Red Delicious' = 'red_delicious'
  ),
  required = TRUE
)

sd_question(
  type  = 'mc',
  id    = 'apple_knowledge_2',
  label = 'Please select the type of this apple:

<img src="https://raw.githubusercontent.com/jhelvy/formr4conjoint/master/survey/images/gala.jpg" width=100>',
  option = c(
    'Fuji'          = 'fuji',
    'Gala'          = 'gala',
    'Honeycrisp'    = 'honeycrisp',
    'Pink Lady'     = 'pink_lady',
    'Red Delicious' = 'red_delicious'
  ),
  required = TRUE
)
```

<br>

```{r}
sd_next(next_page = 'demographics')
```
:::

::: {#demographics .sd-page}
# Demographics Page

## Nice job!

We're almost done! We'd just like to ask just a few more questions about you which we will only use for analyzing our survey data.

```{r}
# Construct the list of years
years <- 2003:1920 %>%
  as.character() %>%
  { setNames(., .) } %>%
  c("Prefer not to say" = "prefer_not_say", .)

sd_question(
  type   = 'select',
  id     = 'year_of_birth',
  label  = "(1) In what year were you born?",
  option = years,
  required = TRUE
)

genders <- c("Male" = "male",
             "Female" = "female", 
             "Non-binary" = "non_binary", 
             "Trans male/trans man" = "trans_male",
             "Trans female/trans woman" = "trans_female",
             "Prefer not to say" = "prefer_not_to_say")

sd_question(
  type   = 'select',
  id     = 'gender',
  label  = "(2) What is your current gender identity?",
  option = genders,
  required = TRUE
)

races <- c("White (Not of Hispanic or Latino origin)" = "white",
            "African American or Black" = "black",
            "Asian" = "asian",
            "Hispanic or Latino " = "hispanic",
            "American Indian or Alaska Native" = "native_american",
            "Native Hawaiian or Other Pacific Islander" = "pacific_islander",
            "Prefer not to say" = "prefer_not_to_say")

sd_question(
  type   = 'select',
  id     = 'race',
  label  = "(3) I identify my race as (select all that apply):",
  option = races,
  required = TRUE
)

educations <- c("Less than high school" = "less_than_high_school",
                "High school" = "high_school",
                "Some college" = "some_college",
                "Associate's degree" = "associate_degree",
                "Bachelor's degree" = "bachelor_degree",
                "Master's degree" = "master_degree",
                "Doctoral degree" = "doctoral_degree",
                "Prefer not to say" = "prefer_not_to_say")

sd_question(
  type   = 'select',
  id     = 'education',
  label  = "(4) What is the highest degree or level of school you have completed? If currently enrolled, please use the highest degree received.",
  option = educations,
  required = TRUE
)

incomes <- c("Less than $10,000"    = "less_than_10k",
             "$10,000 to $14,999"   = "10k_to_14k",
             "$15,000 to $19,999"   = "15k_to_19k",
             "$20,000 to $24,999"   = "20k_to_24k",
             "$25,000 to $29,999"   = "25k_to_29k",
             "$30,000 to $34,999"   = "30k_to_34k",
             "$35,000 to $39,999"   = "35k_to_39k",
             "$40,000 to $49,999"   = "40k_to_49k",
             "$50,000 to $74,999"   = "50k_to_74k",
             "$75,000 to $99,999"   = "75k_to_99k",
             "$100,000 to $149,999" = "100k_to_149k",
             "$150,000 to $199,999" = "150k_to_199k",
             "$200,000 or more"     = "200k_or_more",
             "Prefer not to say"    = "prefer_not_to_say")

sd_question(
  type   = 'select',
  id     = 'income',
  label  = "(5) What is your annual household income (from all sources) before taxes and other deductions from pay?",
  option = incomes,
  required = TRUE
)

sd_question(
  type  = "textarea",
  id    = "feedback",
  label = 
  "Please let us know if you have any other thoughts or feedback on this survey.
  
  Your feedback will help us make future improvements :)"
)
```

<br>

```{r}
sd_next(next_page = 'end_normal')
```
:::

::: {#end_normal .sd-page}
# End Page

```{r}
completion_code <- sample(10^5:(10^6 - 1), 1)
```

The survey is finished. Thank you for your feedback!

Your completion code is: **`r completion_code`**.

You may close the window now.
:::

::: {#end_consent .sd-page}
# End Page

The survey is now finished. You may close the window.
:::

::: {#end_screenout .sd-page}
# End Page

Sorry, we wanted you to select the **red** button.

The survey is now finished. You may close the window.
:::

```{r}
#| context: server

# To set the password, run usethis::edit_r_environ()
# Then, type SUPABASE_PASSWORD=your_password
# No quotation needed

db <- sd_database(
  host       = "aws-0-us-east-1.pooler.supabase.com",
  db_name    = "postgres",
  port       = "6543",
  user       = "postgres.hwumdvjnymbrgeemvrhq",
  table_name = "apple",
  password   = Sys.getenv("SUPABASE_PASSWORD"),
  gssencmode = "disable" # Set to "disable" if there is connection error
)

config <- sd_config(
  skip_if = tibble::tribble(
    ~question_id,         ~question_value, ~target,
    "screenout",          "blue",          "end_screenout",
    "consent_age",        "no",            "end_consent",
    "consent_understand", "no",            "end_consent"
  ),
  show_if = tibble::tribble(
    ~question_id,         ~question_value, ~target,
    "like_fruit",         "yes",           "fav_fruit",
    "like_fruit",         "kind_of",       "fav_fruit"
  )
)

sd_server(
  input   = input,
  session = session,
  config  = config,
  db      = db
)
```
